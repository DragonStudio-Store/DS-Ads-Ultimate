plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'site.dragonstudio'
version = '6.0.1'

repositories {
    mavenCentral()
    maven {
        name = "PaperMC"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "Bungee"
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name = "SpigotMC"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "Sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "Sonartype Central"
        url = "https://oss.sonatype.org/content/repositories/central"
    }
    maven {
        name = "Sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "PlaceholderAPI"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.6-R0.1-SNAPSHOT"
    compileOnly "net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT"
    compileOnly "me.clip:placeholderapi:2.11.5"
    implementation "net.kyori:adventure-api:4.16.0"
    implementation "net.kyori:adventure-text-minimessage:4.16.0"
    implementation "net.kyori:adventure-text-serializer-plain:4.16.0"
    implementation "net.kyori:adventure-text-serializer-legacy:4.16.0"
    implementation "net.kyori:adventure-text-serializer-ansi:4.16.0"
    implementation "net.kyori:adventure-text-serializer-gson-legacy-impl:4.16.0"
    implementation "net.kyori:adventure-text-serializer-gson:4.16.0"
    implementation "net.kyori:adventure-text-serializer-json-legacy-impl:4.16.0"
    implementation "net.kyori:adventure-text-serializer-json:4.16.0"
    implementation "net.kyori:adventure-text-serializer-legacy:4.16.0"
    implementation "net.kyori:adventure-text-serializer-plain:4.16.0"
    implementation 'org.jetbrains:annotations:23.0.0'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set('')
    mergeServiceFiles()
    append 'META-INF/tools-service.txt'
}